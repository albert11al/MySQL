-- БД shop / ДЗ-5
-- 1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.

INSERT INTO users VALUES 
	(NULL, 'Александр', 'Петров', '1998-05-20', '89604782571', NULL, NULL),
	(NULL, 'Том', 'Крузаев', '1991-10-10', '89404182259', NULL, NULL),
	(NULL, 'Ирина', 'Вандамова', '2005-05-17', '89284742564', NULL, NULL),
	(NULL, 'Джеки', 'Чанаев', '1988-12-20', '89644888578', NULL, NULL),
	(NULL, 'Артем', 'Роналдин', '1978-05-25', '896449524111', NULL, NULL),
	(NULL, 'Максим', 'Хемилов', '1989-03-14', '89722700071', NULL, NULL),
	(NULL, 'Камила', 'Алиева', '2002-09-16', '89284252571', NULL, NULL),
	(NULL, 'Юлия', 'Пучкова', '1996-05-20', '89604408571', NULL, NULL),
	(NULL, 'Наталия', 'Арансонова', '2000-01-21', '89604400841', NULL, NULL),
	(NULL, 'Вячеслав', 'Иванов', '1988-06-27', '89484783574', NULL, NULL);

-- Заполняем текущей датой и временем.

UPDATE users 
	SET created_at = NOW(), updated_at = NOW();
	
-- или же можно сделать все сразу 
/* INSERT INTO users VALUES 
	(NULL, 'Александр', 'Петров', '1998-05-20', '89604782571', NOW(), NOW()),
	(NULL, 'Том', 'Крузаев', '1991-10-10', '89404182259', NOW(), NOW()),
	(NULL, 'Ирина', 'Вандамова', '2005-05-17', '89284742564', NOW(), NOW()),
	(NULL, 'Джеки', 'Чанаев', '1988-12-20', '89644888578', NOW(), NOW()),
	(NULL, 'Артем', 'Роналдин', '1978-05-25', '896449524111', NOW(), NOW()),
	(NULL, 'Максим', 'Хемилов', '1989-03-14', '89722700071', NOW(), NOW()),
	(NULL, 'Камила', 'Алиева', '2002-09-16', '89284252571', NOW(), NOW()),
	(NULL, 'Юлия', 'Пучкова', '1996-05-20', '89604408571', NOW(), NOW()),
	(NULL, 'Наталия', 'Арансонова', '2000-01-21', '89604400841', NOW(), NOW()),
	(NULL, 'Вячеслав', 'Иванов', '1988-06-27', '89484783574', NOW(), NOW());*/

-- если оказались какие то заполненвы можно выполнить условия, что бы не заполненые заполнились текущей датой и временем
/*UPDATE users 
 *	SET updated_at = NOW(), created_at = NOW()
WHERE 
	created_at IS NULL AND updated_at IS NULL;*/

/* 2.Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR 
и в них долгое время помещались значения в формате 20.10.2017 8:10. 
Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.*/

DROP TABLE IF EXISTS users;
CREATE TABLE users (
	id SERIAL PRIMARY KEY,
	firstname VARCHAR(100), -- имя покупателя
	lastname VARCHAR(100), -- фамилия покупателя
	birthday_at DATE, -- дата рождения покупателя
	phone BIGINT, -- телефонный номер покупателя 
	created_at VARCHAR(100) COMMENT 'время регистрации пользователя',
	updated_at VARCHAR(100) COMMENT 'время последнего обновления записи пользователя');

INSERT INTO users VALUES 
	(NULL, 'Александр', 'Петров', '1998-05-20', '89604782571', '20.10.2017 8:10', '20.10.2018 9:10'),
	(NULL, 'Том', 'Крузаев', '1991-10-10', '89404182259', '28.12.2019 9:40', '10.08.2021 10:10'),
	(NULL, 'Ирина', 'Вандамова', '2005-05-17', '89284742564', '02.11.2019 12:19', '11.09.2020 9:15'),
	(NULL, 'Джеки', 'Чанаев', '1988-12-20', '89644888578', '09.11.2019 11:19', '11.08.2021 11:15'),
	(NULL, 'Вячеслав', 'Иванов', '1988-06-27', '89484783574', '31.12.2017 12:52', '25.09.2021 18:15');

-- преобразование полей к формату DATETIME с сохранением значений

UPDATE users 
	SET created_at = STR_TO_DATE(created_at, '%d.%m.%Y %k:%i'),
		updated_at = STR_TO_DATE(updated_at, '%d.%m.%Y %k:%i');
	
/*3. В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 
0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, 
чтобы они выводились в порядке увеличения значения value. Однако нулевые запасы должны выводиться в конце, после всех */
	
INSERT INTO storehouses_products VALUES 
	(NULL, NULL, NULL, 5, NOW(), NOW()),
	(NULL, NULL, NULL, 6, NOW(), NOW()),
	(NULL, NULL, NULL, 0, NOW(), NOW()),
	(NULL, NULL, NULL, 14, NOW(), NOW()),
	(NULL, NULL, NULL, 5, NOW(), NOW()),
	(NULL, NULL, NULL, 0, NOW(), NOW()),
	(NULL, NULL, NULL, 10, NOW(), NOW()),
	(NULL, NULL, NULL, 1, NOW(), NOW()),
	(NULL, NULL, NULL, 13, NOW(), NOW()),
	(NULL, NULL, NULL, 0, NOW(), NOW()),
	(NULL, NULL, NULL, 14, NOW(), NOW()),
	(NULL, NULL, NULL, 12, NOW(), NOW()),
	(NULL, NULL, NULL, 0, NOW(), NOW()),
	(NULL, NULL, NULL, 1, NOW(), NOW()),
	(NULL, NULL, NULL, 17, NOW(), NOW());

-- сортируем

SELECT value FROM storehouses_products 
	ORDER BY 
		CASE WHEN  value = 0 THEN 999999 
		ELSE value END;

/*Практическое задание теме «Агрегация данных»
 
1. Подсчитайте средний возраст пользователей в таблице users.*/

INSERT INTO users VALUES 
	(NULL, 'Александр', 'Петров', '1998-05-20', '89604782571', NULL, NULL),
	(NULL, 'Том', 'Крузаев', '1991-10-10', '89404182259', NULL, NULL),
	(NULL, 'Ирина', 'Вандамова', '2005-05-17', '89284742564', NULL, NULL),
	(NULL, 'Джеки', 'Чанаев', '1988-12-20', '89644888578', NULL, NULL),
	(NULL, 'Артем', 'Роналдин', '1978-05-25', '896449524111', NULL, NULL),
	(NULL, 'Максим', 'Хемилов', '1989-03-14', '89722700071', NULL, NULL),
	(NULL, 'Камила', 'Алиева', '2002-09-16', '89284252571', NULL, NULL),
	(NULL, 'Юлия', 'Пучкова', '1996-05-20', '89604408571', NULL, NULL),
	(NULL, 'Наталия', 'Арансонова', '2000-01-21', '89604400841', NULL, NULL),
	(NULL, 'Вячеслав', 'Иванов', '1988-06-27', '89484783574', NULL, NULL);

-- средний возраст

SELECT firstname, lastname, ROUND(AVG((TO_DAYS(NOW()) - TO_DAYS(birthday_at)) / 365.25), 0) AS ave FROM users;

-- ROUND округля число после запятой
-- AVG возврашает среднее значения 
-- более короткий запись SELECT AVG(TIMESTAMPDIFF(YEAR, birthday_at, NOW())) AS age FROM users;

 /* 2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. 
 Следует учесть, что необходимы дни недели текущего года, а не года рождения.*/

INSERT INTO users VALUES 
	(NULL, 'Александр', 'Петров', '1998-05-20', '89604782571', NULL, NULL),
	(NULL, 'Том', 'Крузаев', '1991-10-10', '89404182259', NULL, NULL),
	(NULL, 'Ирина', 'Вандамова', '2005-05-17', '89284742564', NULL, NULL),
	(NULL, 'Джеки', 'Чанаев', '1988-12-20', '89644888578', NULL, NULL),
	(NULL, 'Артем', 'Роналдин', '1978-05-25', '896449524111', NULL, NULL),
	(NULL, 'Максим', 'Хемилов', '1989-03-14', '89722700071', NULL, NULL),
	(NULL, 'Камила', 'Алиева', '2002-09-16', '89284252571', NULL, NULL),
	(NULL, 'Юлия', 'Пучкова', '1996-05-20', '89604408571', NULL, NULL),
	(NULL, 'Наталия', 'Арансонова', '2000-01-21', '89604400841', NULL, NULL),
	(NULL, 'Вячеслав', 'Иванов', '1988-06-27', '89484783574', NULL, NULL);

-- Подсчет количество дней рождения, которые приходятся на каждый из дней недели

SELECT
	DATE_FORMAT(DATE(CONCAT(YEAR(NOW()), '-', SUBSTRING(birthday_at, 6, 10))), '%W') AS day, COUNT(*) AS total
FROM                                                             -- 6-месяц
	users                    									-- 10-день
GROUP BY 
	day
ORDER BY 
	total DESC;


































